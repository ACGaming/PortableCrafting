buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

repositories {
//    maven { // The repo from which to get waila
//        name "Mobius Repo"
//        url "http://mobiusstrip.eu/maven"
//    }
    maven { // JEI
        url "http://dvs1.progwml6.com/files/maven"
    }
}

version = "0.1.0"
group= "gr8pefish.yapcm"
archivesBaseName = "yapcm"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.8.9-11.15.0.1691"
    runDir = "run"
    mappings = "snapshot_20151216"
    useDepAts = true
}

dependencies {
//    deobfCompile "mcp.mobius.waila:Waila:1.6.0-B3_1.8.8"
    deobfCompile "mezz.jei:jei_1.8.8:2.8.3.39"
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version':project.version, 'mcversion':project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

//buildscript {
//    repositories {
//        mavenCentral()
//        maven { url "http://files.minecraftforge.net/maven" }
//        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
//    }
//    dependencies {
//        classpath 'net.minecraftforge.gradle:ForgeGradle:2.0-SNAPSHOT'
//        classpath 'org.ajoberstar:gradle-git:0.10.1'
//    }
//}
//
//plugins {
//    id 'com.matthewprenger.cursegradle' version '1.0.4'
//    id "net.minecraftforge.gradle.forge" version "2.0.2"
//}
//
//apply plugin: 'maven-publish'
//
//group = package_group
//archivesBaseName = mod_name
//version = "${mc_version}-${mod_version}"
//
//// Ignore this error. It'll work just fine when building.
//import org.ajoberstar.grgit.*
//
//ext.repo = Grgit.open(project.file('.'))
//def gitHash = 'unknown'
//
//if (new File(projectDir, '.git').exists())
//    gitHash = repo.log().find().abbreviatedId
//
//repositories {
//
//}
//
//dependencies {
//
//}
//
//minecraft {
//    version = "${mc_version}-${forge_version}"
//    runDir = "run"
//
//    replace "@VERSION@", project.version
//    replaceIn "ModInformation.java"
//
//    if (project.hasProperty('mappings_version'))
//        mappings = project.mappings_version
//}
//
//processResources {
//    inputs.property "version", project.version
//    inputs.property "mcversion", project.minecraft.version
//
//    from(sourceSets.main.resources.srcDirs) {
//        include '**/*.info'
//        include '**/*.properties'
//
//        expand 'version': project.version, 'mcversion': project.minecraft.version
//    }
//
//    from(sourceSets.main.resources.srcDirs) {
//        exclude '**/*.info'
//        exclude '**/*.properties'
//    }
//}
//
//jar {
//    classifier = ''
//    manifest.mainAttributes(
//            "Built-By": System.getProperty('user.name'),
//            "Created-By": "${System.getProperty('java.vm.version')} + (${System.getProperty('java.vm.vendor')})",
//            "Implementation-Title": project.name,
//            "Implementation-Version": project.version,
//            "Git-Hash": gitHash
//    )
//}
//
//// Javadoc jar
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    from javadoc.destinationDir
//    classifier = 'javadoc'
//}
//
//// Deobfuscated jar
//task deobfJar(type: Jar) {
//    from sourceSets.main.output
//    classifier = 'deobf'
//}
//
//tasks.build.dependsOn sourceJar, javadocJar, deobfJar
//
//tasks.withType(JavaCompile) { task ->
//    task.options.encoding = 'UTF-8'
//}
//
//publishing {
//    tasks.publish.dependsOn 'build'
//    publications {
//        mavenJava(MavenPublication) {
//            artifact jar
//            artifact sourceJar
//            artifact javadocJar
//            artifact deobfJar
//        }
//    }
//    repositories {
//        if (project.hasProperty('maven_repo')) {
//            maven { url maven_repo }
//        } else {
//            mavenLocal()
//        }
//    }
//}
//
//String getChangelogText() {
//    def changelogFile = new File('changes.txt')
//    String str = ''
//    String separator = '---'
//    int lineCount = 0
//    boolean done = false
//    changelogFile.eachLine {
//        if (done || it == null) {
//            return
//        }
//        if (lineCount < 3) {
//            lineCount++
//            if (it.startsWith(separator)) {return}
//        }
//        if (!it.startsWith(separator)) {
//            str += "$it" + (lineCount < 3 ? ':\n\n' : '\n')
//            return
//        }
//        done = true // once we go past the first version block, parse no more
//    }
//    return str
//}
//
//curseforge {
//    if (project.hasProperty('curse_key'))
//        apiKey = project.curse_key
//
//    project {
//        id = "${curse_id}"
//        changelog = getChangelogText()
//        releaseType = project.hasProperty('release') ? 'release' : 'beta'
//        addGameVersion '1.8.8'
//
//        addArtifact deobfJar
//        addArtifact sourceJar
//        addArtifact javadocJar
//    }
//}
